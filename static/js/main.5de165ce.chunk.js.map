{"version":3,"sources":["data/house.jpeg","pages/Home.js","data/dataUser.js","components/message.js","components/comments.js","components/messageAcordion.js","components/messageSearchBar.js","data/dataMessage.js","components/newMessageModal.js","pages/Messages.js","data/dataVotings.js","components/Votings Componnets/voting.js","components/Votings Componnets/votingAccordion.js","pages/Votings.js","modals/login.js","components/navHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","Jumbotron","React","Component","User","parseUser","this","id","userName","get","apartment","isCommitteeMember","Message","props","Row","Col","Image","src","require","rounded","mymessage","details","priority","Comments","comment","MessageAcordion","e","delete","accordionMap","messages","map","message","index","Card","key","Header","Accordion","Toggle","as","Button","variant","eventKey","title","className","onClick","btnDeleteHandler","Collapse","Body","defaultActiveKey","MessageSeacrhBar","handleFilter","bind","handlePriority","handleDateSort","preventDefault","filter","target","value","priorityFilter","dateSort","checked","Form","lg","Control","type","placeholder","onChange","InputGroup","defaultValue","Label","Check","label","DataMessage","user","comments","MyVerticallyCenteredModal","titleHandlerModal","detailsHandlerModal","priorityHandlerModal","modalSubmitHandler","submitbtn","Modal","size","aria-labelledby","centered","closeButton","Title","Group","controlId","column","sm","span","offset","Footer","onHide","Messages","state","setModalShow","modalShow","searchBarFilter","searchBarPriorityFilter","submitHandler","titleHandler","detailsHandler","priorityHandler","searchBarDateSort","deleteMesaage","setState","myNewObject","Parse","Object","extend","set","current","save","then","result","console","log","error","parseIntialQuery","query","Query","fullText","QueryMapping","equalTo","SortChecked","descending","find","results","messageArray","dataMessage","activeuser","object","destroy","response","prioritySort","searchBarprioritySort","show","dataVotings","voting","dueDate","votes","options","myVote","Voting","selectHandler","voteHandler","option","voteClicked","vote","toString","slice","VotingAccordion","votingOptionHandler","votingHandler","val","Votings","votingIntialData","optionsHandler","add","votingData","dataVoting","Login","password","isLoggedIn","userNameHandler","passowrdHandler","loginHandler","logIn","loggeduser","catch","onBlur","NavHeader","setLoginModal","activeUser","activeUserName","loginModal","closeModal","handleLogin","bol","Navbar","collapseOnSelect","expand","bg","Brand","href","aria-controls","Nav","Link","App","activeUserId","handleActiveUser","exact","path","Boolean","window","location","hostname","match","serverURL","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5de165ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/house.5edee41a.jpeg\";","import React from 'react'\nimport {Jumbotron, Container} from 'react-bootstrap'\n\nclass Home extends React.Component{\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h1>Home Association Management System</h1>\n                    \n                </Jumbotron>\n            </Container>\n        )\n    }\n}\nexport default Home","class User {\n    constructor(parseUser){\n        this.id = parseUser.id;\n        this.userName =parseUser.get('username')\n        this.apartment = parseUser.get('apartment')\n        this.isCommitteeMember = parseUser.get('isCommitteeMember')\n    }\n}\nexport default User;","import React from 'react';\nimport { Row, Col, Image,  } from 'react-bootstrap'\nimport User from '../data/dataUser'\n\n\n\n\nclass Message extends React.Component {\n    constructor(props){\n        super(props)\n        \n        }\n        \n    \n    \n    render() {\n       \n        \n        return (\n            <div>\n                    <Row>\n                    <Col>\n                        <Image src={ require('../data/house.jpeg') } rounded />\n                    </Col>\n                    <Col>\n                        <div>\n                            <p>Details:{this.props.mymessage.details}</p>\n                            <p>Priority:{this.props.mymessage.priority[0]}</p>\n                        </div>\n                    </Col>\n                    </Row>\n                \n            </div>\n        )\n    }\n\n\n}\nexport default Message","import React from 'react'\nimport {Row,Col, Button} from 'react-bootstrap'\n\nclass Comments extends React.Component {\n    constructor(){\n        super()\n    }\n    render(){\n        return(\n            <div>\n               \n                <Col>\n                    <h4>Comments:</h4>\n                    <p>{this.props.comment}</p>\n                </Col>\n            </div>\n        )\n    }\n\n}\nexport default Comments ","\nimport React from 'react'\nimport Message from './message'\nimport { Accordion, Card, Button ,Row} from 'react-bootstrap'\nimport Comments from '../components/comments'\n\nclass MessageAcordion extends React.Component {\n    constructor(props) {\n        super(props)\n        // this.btnDeleteHandler =this.btnDeleteHandler.bind(this)\n    }\n    btnDeleteHandler(e,id){\n        this.props.delete(id);\n    }\n\n    render() {\n        const accordionMap = this.props.messages.map((message, index) => {\n            return (<Card key={message.id}>\n                <Card.Header>\n\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\n                        {message.title}\n                        \n                    </Accordion.Toggle>\n                    <Button className='btnDelete' onClick={(e) => this.btnDeleteHandler(e,message.id)} variant=\"danger\">Delete</Button>\n                </Card.Header>\n                <Accordion.Collapse eventKey={index}>\n                    <Card.Body>\n                        <Row>\n                        <Message mymessage={message} />\n                                <Comments/>\n                         </Row>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>)\n        });\n\n\n\n\n        return (\n            <div>\n            <Accordion defaultActiveKey=\"0\">\n                {accordionMap}\n            </Accordion>\n            </div>\n        )\n    }\n}\nexport default MessageAcordion;","import React from 'react'\nimport { Form, Row, Col, DropdownButton, Dropdown, InputGroup, FormControl } from 'react-bootstrap'\nimport './componentsStyle.css'\n\n\n\nclass MessageSeacrhBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleFilter = this.handleFilter.bind(this)\n        this.handlePriority = this.handlePriority.bind(this)\n        this.handleDateSort = this.handleDateSort.bind(this)\n    }\n    handleFilter(e) {\n        e.preventDefault()\n        this.props.filter(e.target.value)\n    }\n    handlePriority(e) {\n        this.props.priorityFilter(e.target.value)\n    }\n    handleDateSort(e){\n       \n     this.props.dateSort(e.target.checked)\n    }\n    render() {\n        return (\n            <Form className=\"formSearchBar\">\n                <Row>\n                    <Col lg={5}>\n                        <Form.Control type=\"text\" placeholder=\"Filter BY Title\" onChange={this.handleFilter} />\n                    </Col>\n                    <Col lg={3}>\n                        <InputGroup className=\"mb-3\">\n                            <Form.Control as=\"select\" onChange={this.handlePriority} >\n                                <option value=\"\"  defaultValue>Filter By Priority</option>\n                                <option value='normal'>normal</option>\n                                <option value='important'>important</option>\n                                <option value='urgent'>urgent</option>\n                            </Form.Control>\n\n                        </InputGroup>\n\n                    </Col>\n                    <Col lg={2}>\n                        <Form.Label>Sort BY:</Form.Label>\n                    </Col>\n                    <Col lg={1}>\n                        <Form.Check type=\"checkbox\" label=\"Date\" onChange={this.handleDateSort}/>\n                    </Col>\n                    <Col lg={1}>\n                        <Form.Check type=\"checkbox\" label=\"Priority\" />\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\nexport default MessageSeacrhBar;","\n class DataMessage {\n    constructor(message){\n    this.id = message.id\n    this.user = message.get('createdBy')\n    this.title = message.get('title');\n    this.details = message.get('details');\n    this.priority = message.get('priority');\n    this.comments = message.get('comments');\n    }\n\n}\n\nexport default DataMessage","import React from 'react';\nimport {Modal,Button,Row,Col,Form,} from 'react-bootstrap'\n\n\n\nclass MyVerticallyCenteredModal extends React.Component {\n  constructor (props){\n    super(props)\n    \n    this.titleHandlerModal = this.titleHandlerModal.bind(this);\n    this.detailsHandlerModal = this.detailsHandlerModal.bind(this);\n    this.priorityHandlerModal =this.priorityHandlerModal.bind(this);\n    this.modalSubmitHandler = this.modalSubmitHandler.bind(this)\n  }\n  titleHandlerModal(e){\n    this.props.title(e.target.value);\n    // this.setState = ({title:e.target.value},this.modalSubmitHandler);\n    // console.log(this.state.title)\n  }\n  detailsHandlerModal(e){\n    this.props.details(e.target.value)\n  }\n  priorityHandlerModal(e){\n    this.props.priority(e.target.value)\n  }\n  modalSubmitHandler(e){\n    e.preventDefault();\n    this.props.submitbtn()\n  }\n\n\n  render() {\n  return (\n    <Modal\n      {...this.props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          New Message\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Form>\n  <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n    <Form.Label column sm={2}>\n      Title\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type=\"text\" placeholder=\"Title\" onChange={this.titleHandlerModal}/>\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n    <Form.Label column sm={2}>\n      Details\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control as=\"textarea\" placeholder=\"Details\" onChange={this.detailsHandlerModal}/>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n    <Form.Label column sm={2}>\n      Priority\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control as=\"select\" onChange={this.priorityHandlerModal}>\n      <option value='normal'>normal</option>\n      <option value='important'>important</option>\n      <option value='urgent'>urgent</option>\n      </Form.Control>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row}>\n    <Col lg={{span:3 ,offset:9}} sm={{ span: 10, offset: 2 }}>\n      <Button type=\"btn\" onClick={this.modalSubmitHandler}>Add new message</Button>\n    </Col>\n  </Form.Group>\n</Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={this.props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n}\nexport default MyVerticallyCenteredModal;\n","import React from 'react';\nimport MessageAcordiong from '../components/messageAcordion'\nimport Parse from 'parse'\nimport MessageSearchBar from '../components/messageSearchBar'\nimport { Container, Button } from 'react-bootstrap'\nimport dataMessage from '../data/dataMessage'\nimport MyVerticallyCenteredModal from '../components/newMessageModal'\n\nclass Messages extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: ['test'],\n            setModalShow: false,\n            modalShow: false,\n            title: \"\",\n            details: \"\",\n            priority: \"normal\"\n        }\n        this.searchBarFilter = this.searchBarFilter.bind(this)\n        this.searchBarPriorityFilter = this.searchBarPriorityFilter.bind(this)\n        this.setModalShow = this.setModalShow.bind(this)\n        this.submitHandler = this.submitHandler.bind(this)\n        this.titleHandler = this.titleHandler.bind(this)\n        this.detailsHandler = this.detailsHandler.bind(this)\n        this.priorityHandler = this.priorityHandler.bind(this)\n        this.searchBarDateSort = this.searchBarDateSort.bind(this)\n        this.deleteMesaage = this.deleteMesaage.bind(this)\n    }\n    //lifting title state up form messageModal\n    titleHandler(title) {\n        this.setState({ title })\n\n        //lifting details state up form messageModal\n    }\n    detailsHandler(details) {\n        this.setState({ details })\n    }\n    //lifting pririty state up form messageModal\n\n    priorityHandler(priority) {\n        this.setState({ priority })\n    }\n\n\n    submitHandler() {\n        const Message = Parse.Object.extend('Message');\n        const myNewObject = new Message();\n        myNewObject.set('createdBy', Parse.User.current());\n        myNewObject.set('title', this.state.title);\n        myNewObject.set('details', this.state.details);\n        myNewObject.set('priority', [this.state.priority]);\n        myNewObject.save().then(\n            (result) => {\n                console.log('ParseObject created', result);\n            },\n            (error) => {\n\n                console.error('Error while creating ParseObject: ', error);\n            })\n\n        this.parseIntialQuery();\n\n    }\n    setModalShow(e) {\n        // e.preventDefault();\n        if (this.state.setModalShow) {\n            this.setState({ setModalShow: false })\n        } else {\n            this.setState({ setModalShow: true })\n        }\n    }\n    searchBarFilter(value) {\n\n        if (value) {\n            const filter = Parse.Object.extend('Message');\n            const query = new Parse.Query(filter);\n            // query.equalTo(\"createdBy\", this.props.acactiveuser);\n            query.fullText('title', value)\n            this.QueryMapping(query)\n        } else {\n            this.parseIntialQuery();\n\n        }\n    }\n    searchBarPriorityFilter(value) {\n        console.log(value)\n        if (value) {\n            const filter = Parse.Object.extend('Message');\n            const query = new Parse.Query(filter);\n            // query.equalTo(\"createdBy\", this.props.acactiveuser);\n            query.equalTo('priority', value)\n            this.QueryMapping(query)\n\n        } else {\n            this.parseIntialQuery();\n\n        }\n    }\n    searchBarDateSort(SortChecked) {\n\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n        // query.equalTo(\"createdBy\", this.props.acactiveuser);\n        query.descending('createdAt')\n        if (SortChecked) {\n            this.QueryMapping(query)\n        } else {\n            this.parseIntialQuery();\n        }\n    }\n    QueryMapping(query) {\n        query.find().then((results) => {\n            // You can use the \"get\" method to get the value of an attribute\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n\n            const messageArray = results.map(message => new dataMessage(message));\n            this.setState({ message: messageArray })\n\n        }, (error) => {\n            console.error('Error while fetching Message', error);\n        });\n    }\n    parseIntialQuery() {\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n        \n        // query.equalTo(\"createdBy\", Parse.User.current);\n        console.log(this.props.activeuser)\n        query.find().then((results) => {\n            // You can use the \"get\" method to get the value of an attribute\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n            console.log(results)\n            const messageArray = results.map((message) => new dataMessage(message));\n            this.setState({ message: messageArray })\n\n        }, (error) => {\n            console.error('Error while fetching Message', error);\n        });\n    }\n    deleteMesaage(id) {\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n        // here you put the objectId that you want to delete\n        query.get(id).then((object) => {\n            object.destroy().then((response) => {\n\n            }, (error) => {\n\n                console.error('Error while deleting Message', error);\n            });\n        });\n        this.parseIntialQuery();\n    }\n    componentDidMount() {\n        this.parseIntialQuery();\n    }\n    render() {\n        if (this.state.message[0] === 'test') {\n            return (\n\n                <div>\n                    \n                    <Container>\n                        <MessageSearchBar\n                            filter={this.searchBarFilter}\n                            priorityFilter={this.searchBarPriorityFilter}\n                            dateSort={this.searchBarDateSort}\n                            prioritySort={this.searchBarprioritySort}\n                        />\n                        <Button className='btnMsg' variant=\"primary\" onClick={this.setModalShow}>New Message</Button>\n                        <MyVerticallyCenteredModal\n                            show={this.state.setModalShow}\n                            onHide={this.setModalShow}\n                            submitbtn={this.submitHandler}\n                            title={this.titleHandler}\n                            details={this.detailsHandler}\n                            priority={this.priorityHandler}\n                        />\n                    </Container>\n                </div>\n\n            )\n        } else {\n            return (\n\n                <div>\n                   \n                    <Container>\n                        <MessageSearchBar\n                            filter={this.searchBarFilter}\n                            priorityFilter={this.searchBarPriorityFilter}\n                            dateSort={this.searchBarDateSort}\n                            prioritySort={this.searchBarprioritySort}\n                        />\n                        <Button className='btnMsg' variant=\"primary\" onClick={this.setModalShow}>New Message</Button>\n                        <MyVerticallyCenteredModal\n                            show={this.state.setModalShow}\n                            onHide={this.setModalShow}\n                            submitbtn={this.submitHandler}\n                            title={this.titleHandler}\n                            details={this.detailsHandler}\n                            priority={this.priorityHandler}\n                        />\n                        <MessageAcordiong messages={this.state.message} delete={this.deleteMesaage} />\n                    </Container>\n                </div>\n\n            )\n        }\n    }\n\n\n}\n\nexport default Messages","class dataVotings{\n    constructor(voting){\n        this.id =voting.id\n        this.details = voting.get('details')\n        this.title = voting.get('title')\n        this.dueDate = voting.get('dueDate')\n        this.votes = voting.get('votes')\n        this.user = voting.get('createdBy')\n        this.options = voting.get('options')\n        this.myVote = voting.get('vote')\n    }\n\n}\nexport default dataVotings","import React from 'react';\nimport { Row, Col,Form,InputGroup,Button} from 'react-bootstrap'\n// import Chart from '../../components/doughnut'\n\n\n\n\nclass Voting extends React.Component {\n    constructor(props){\n        super(props)\n        this.selectHandler = this.selectHandler.bind(this)\n        this.voteHandler = this.voteHandler.bind(this)\n        }\n        selectHandler(e){\n            this.props.option(e.target.value)\n        }\n        \n        voteHandler(){\n            this.props.voteClicked()\n            \n        }\n\n    \n    render() {\n        console.log(this.props.vote.options)\n        const options = this.props.vote.options.map((option,index) => {\n                         return  ( <option key={index} value={index}>{option}</option>)\n        } )\n        \n        return(\n            <div>\n                <Row>\n                    <Col>\n                          <h4>Details:</h4> <p>{this.props.vote.details}</p>\n                          <h4>End Date:</h4>  <p>{this.props.vote.dueDate.toString().slice(0,21)}</p>\n                    </Col>\n                    <Col>\n                    <Form>\n                    <Form.Label>voting options:</Form.Label>\n                    <InputGroup className=\"mb-3\">\n                            <Form.Control as=\"select\" onChange={this.selectHandler} >\n                                <option value=\"\" defaultValue>Voting options</option>\n                                {options}\n                            </Form.Control>\n                            <Button onClick={this.voteHandler}>Vote!</Button>\n                        </InputGroup>\n                        </Form>\n                      \n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n\n}\nexport default Voting","import React from 'react'\nimport Voting from './voting'\nimport { Accordion, Card, Button } from 'react-bootstrap'\n\nclass VotingAccordion extends React.Component {\n    constructor(props) {\n        super(props)\n        this.votingOptionHandler = this.votingOptionHandler.bind(this)\n        this.votingHandler = this.votingHandler.bind(this)\n    }\n    \n    votingOptionHandler (val){\n           this.props.options(val) \n    }\n    votingHandler(){\n        this.props.voteClicked()\n    }\n\n\n    render() {\n        const accordionMap = this.props.voting.map((votes, index) => {\n            return (<Card key={votes.id}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\n                        {votes.title}\n                        \n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={index}>\n                    <Card.Body><Voting vote={votes} option={this.votingOptionHandler} voteClicked={this.votingHandler}/>\n                    \n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>)\n        });\n\n\n\n\n        return (\n            <div>\n            <Accordion defaultActiveKey=\"0\">\n                {accordionMap}\n            </Accordion>\n            </div>\n        )\n    }\n}\nexport default VotingAccordion;","import React from 'react';\nimport Parse from 'parse';\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport dataVoting from '../data/dataVotings'\nimport VotingAccordion from '../components/Votings Componnets/votingAccordion'\n\n\n\n\nclass Votings extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            voting: ['test'],\n            options:\"\",\n           \n        }\n        this.votingIntialData = this.votingIntialData.bind(this)\n        this.optionsHandler = this.optionsHandler.bind(this)\n        this.voteHandler =this.voteHandler.bind(this)\n    }\n\n    optionsHandler (val){\n        this.setState({\n            options:val\n        })\n    }\n\n    voteHandler (){\n        const myVote= {\n                user:this.state.voting[0].user.id,\n                option:this.state.voting[0].options[this.state.options]\n            }\n            \n        const Voting = Parse.Object.extend('Voting');\n        const query = new Parse.Query(Voting);\n        query.get(this.state.voting[0].id).then((object) =>{\n            object.add('vote',myVote)\n            object.save().then((response) => {\n                // You can use the \"get\" method to get the value of an attribute\n                // Ex: response.get(\"<ATTRIBUTE_NAME>\")\n                \n                console.log('Updated Voting', response);\n                this.votingIntialData();\n              }, (error) => {\n                \n                console.error('Error while updating Voting', error);\n              });\n        });\n            \n    }\n    \n    votingIntialData() {\n        const Voting = Parse.Object.extend('Voting');\n        const query = new Parse.Query(Voting);\n        \n        query.find().then((results) => {\n\n            const votingData = results.map((voting) => new dataVoting(voting));\n            this.setState({ voting: votingData })\n            console.log(this.state.voting)\n\n\n        }, (error) => {\n\n            console.error('Error while fetching Voting', error);\n        });\n    }\n    componentDidMount() {\n        this.votingIntialData()\n    }\n    render() {\n            return (\n                <div>\n                    \n                    <Container>\n                        <Row>\n                            <Col>\n                                <h1>Active Votings</h1>\n                                {(this.state.voting[0]==='test')? <div></div>:<VotingAccordion voting={this.state.voting} options={this.optionsHandler} voteClicked={this.voteHandler} />}\n                            </Col>\n                            <Col>\n                                <h1>Votings Results</h1>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        \n    }\n}\nexport default Votings","import React from 'react'\nimport { Modal, Form, Col, Row, Button } from 'react-bootstrap'\nimport Parse from 'parse'\nimport User from '../data/dataUser'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      isLoggedIn:false,\n    }\n    this.userNameHandler =this.userNameHandler.bind(this)\n    this.passowrdHandler = this.passowrdHandler.bind(this)\n    this.loginHandler = this.loginHandler.bind(this)\n  }\nuserNameHandler(e){\n \n  this.setState({userName:e.target.value})\n}\npassowrdHandler (e){\n  \n  this.setState({password:e.target.value})\n}\nloginHandler(){\n  Parse.User.logIn(this.state.userName,this.state.password).then((user)=>{\n    this.props.loggeduser(new User(user))\n    this.setState({isLoggedIn:true})\n  \n  }).catch(error => {\n    console.error('Error while logging in user', error);\n  });\n  }\n  \n  \n\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Login\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                user\n    </Form.Label>\n              <Col sm={10}>\n                <Form.Control type=\"text\" placeholder=\"user name\" onBlur={this.userNameHandler}/>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n              <Form.Label column sm={2}>\n                Password\n    </Form.Label>\n              <Col sm={10}>\n                <Form.Control type=\"password\" placeholder=\"password\" onBlur={this.passowrdHandler}/>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Col lg={{ span: 3, offset: 9 }} sm={{ span: 10, offset: 2 }}>\n                <Button type=\"btn\" onClick={this.loginHandler}>Login</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={()=>this.props.onHide(false)}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nexport default Login","import React from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport Login from '../modals/login'\n\n\nclass NavHeader extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            setLoginModal:false,\n            activeUser:null,\n            activeUserName:\"\"\n           \n        }\n        this.loginModal = this.loginModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this)\n    }\n    loginModal(){\n        if(this.state.setLoginModal){\n            this.setState({setLoginModal:false})\n        }else{\n            this.setState({setLoginModal:true})\n           \n        }\n        \n    }\n    closeModal(bol){\n        if(bol===false){\n            this.setState({setLoginModal:false})\n        }\n    }\n    handleLogin(user){\n        this.setState({activeUser:user.id,\n                      activeUserName:user.userName});\n        this.props.activeuser(user)\n    }\n    \n    \n\n    render(){\n        console.log(this.state.activeUser)\n        return(\n    <div>\n    <Login \n    show={this.state.setLoginModal}\n    onHide={this.closeModal}\n    loggeduser= {this.handleLogin}\n    \n     />\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#\">HOA Systems</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#features\">Dashboard</Nav.Link>\n            <Nav.Link href=\"#pricing\">Tenants</Nav.Link>\n            <Nav.Link href=\"#/Messages\">Messages</Nav.Link>\n            <Nav.Link href=\"#pricing\">Issues</Nav.Link>\n            <Nav.Link href=\"#/votings\">Votings</Nav.Link>\n            \n        </Nav>\n        {\n            this.state.activeuser == null ? (<Nav>\n                <Nav.Link href=\"#/signup\">Signup</Nav.Link>\n                <Nav.Link href=\"#deets\">Logout</Nav.Link>\n                <Nav.Link onClick={this.loginModal} >Login</Nav.Link >  </Nav>) :(<Nav>\n            <Nav.Link href=\"#deets\">Logout</Nav.Link>\n            <Nav.Link >Hello {this.state.activeUserName}</Nav.Link>\n                     </Nav>)  \n      \n    }\n        \n    </Navbar.Collapse>\n</Navbar>\n</div>\n        )}\n}\n\nexport default NavHeader","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Messages from './pages/Messages'\nimport Votings from './pages/Votings'\nimport NavHeader from './components/navHeader'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      activeUserId : null,\n    }\n    this.handleActiveUser = this.handleActiveUser.bind(this)\n  }\n  handleActiveUser(user){\n      this.setState({activeUserId:user.id });\n  }\n  render() {\n\n    const {activeUserId} = this.state;\n    if (activeUserId){\n    return (\n      <div>\n        <NavHeader activeuser={this.handleActiveUser} />\n      <Switch>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        {/*<Routh path='/dashboardcommitte'>\n          <DashboardCommitte />\n        </Routh>\n        <Route path='/dashboardtenants'>\n          <DashboardTenats />\n        </Route>\n        <Route path='/tenants'>\n          <Tenants />\n        </Route> */}\n        <Route path='/messages'>\n          <Messages activeuser={activeUserId}/>\n        </Route>\n        <Route path='/votings'>\n          <Votings activeuser={activeUserId} />\n        </Route>\n        {/* <Route path='/newvoting'>\n          <NewVoting />\n        </Route> */}\n      </Switch>\n      </div>\n    )\n      } else {\n        return (\n        <div>\n        <NavHeader activeuser={this.handleActiveUser} />\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        </div>\n        )\n      }\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'rrUtFgdRGisGsUNEqnaAHPJ4DMU2iWwY3p7s73oH', // This is your Application ID\n  'S5hggRsu9jmyM7Bxkd5znt7u2W1H86PGs1OvYRda' // This is your Javascript key\n);\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}